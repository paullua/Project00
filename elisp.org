#+TITLE: Elisp Code
#+LANGUAGE: en
#+OPTIONS: H:4 num:nil toc:nil \n:nil @:t ::t |:t ^:t *:t TeX:t LaTeX:t
#+OPTIONS: html-postamble:nil
#+STARTUP: showeverything entitiespretty

NOTE: Comment your code, and verify it works for "breaking cases" i.e. 0! = 1.

* Factorial Code
** TODO Code
#+BEGIN_SRC emacs-lisp
(require 'cl)
(defun factorial (integer)
   (if (= 1 integer) 1
      (* integer (factorial (- integer 1)))))
#+END_SRC

#+RESULTS:
: factorial

** Test cases
#+BEGIN_SRC elisp
(factorial 1)
#+END_SRC

#+RESULTS:
: 1

#+BEGIN_SRC elisp
(factorial 1)
#+END_SRC

#+BEGIN_SRC elisp
(factorial 1)
#+END_SRC

#+BEGIN_SRC elisp
(factorial 1)
#+END_SRC

** How big a number will make your computer freeze?
It probably would depend on what you are trying to do or what computor you are using. But for sure, 2^42 would definitely do it.
We chose this number because 2^n is the number that represents everything, and we chose 42 to represent n because it is also the
answer to everything.
* "Real-World" function with mapcar
** What is mapcar
** Code
#+BEGIN_SRC emacs-lisp
(print "Hello world")
#+END_SRC

#+RESULTS:
: Hello world

* Loop function
** Code
#+BEGIN_SRC emacs-lisp
(require 'cl);;

(loop for n from 1 to 9
      do (princ (format "%d --> %d.\n"
                        n
                        ((lambda (n) (if (evenp n) (/ n 2) (+ 1 (* 3 n))))
                         n))))
#+END_SRC
